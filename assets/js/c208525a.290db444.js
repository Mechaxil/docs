"use strict";(self.webpackChunkmechaxil_docs=self.webpackChunkmechaxil_docs||[]).push([[4471],{6708:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"type":"mdx","permalink":"/mechaxil","source":"@site/src/pages/mechaxil.mdx","title":"Mechaxil \u2013 Open-Source Electronics from Hungary","description":"What is Mechaxil? Affordable open-source electronics kits, Raspberry Pi/ESP32 modules, and clear documentation from Gy\u0151r, Hungary.","frontMatter":{"title":"Mechaxil \u2013 Open-Source Electronics from Hungary","description":"What is Mechaxil? Affordable open-source electronics kits, Raspberry Pi/ESP32 modules, and clear documentation from Gy\u0151r, Hungary.","slug":"/mechaxil","tags":["mechaxil","electronics","raspberry-pi","esp32","robotics","hungary"],"image":"/img/mechaxil-og.jpg"},"unlisted":false}');var s=n(4848),r=n(8453),a=n(5260);const c={title:"Mechaxil \u2013 Open-Source Electronics from Hungary",description:"What is Mechaxil? Affordable open-source electronics kits, Raspberry Pi/ESP32 modules, and clear documentation from Gy\u0151r, Hungary.",slug:"/mechaxil",tags:["mechaxil","electronics","raspberry-pi","esp32","robotics","hungary"],image:"/img/mechaxil-og.jpg"},o="What is Mechaxil?",l={},h=[{value:"Highlights",id:"highlights",level:2},{value:"Explore",id:"explore",level:2}];function d(e){const t={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.A,{children:[(0,s.jsx)("script",{type:"application/ld+json",children:JSON.stringify({"@context":"https://schema.org","@type":"Article",headline:"What is Mechaxil?",about:{"@type":"Organization",name:"Mechaxil"},url:"https://docs.mechaxil.com/mechaxil",image:"https://docs.mechaxil.com/img/mechaxil-og.jpg",author:{"@type":"Organization",name:"Mechaxil"}})}),(0,s.jsx)("script",{type:"application/ld+json",children:JSON.stringify({"@context":"https://schema.org","@type":"FAQPage",mainEntity:[{"@type":"Question",name:"What is Mechaxil?",acceptedAnswer:{"@type":"Answer",text:"Mechaxil is an open-source electronics brand offering affordable kits, modules, and documentation."}},{"@type":"Question",name:"Where is Mechaxil based?",acceptedAnswer:{"@type":"Answer",text:"Hungary. We ship EU-wide via our webshop."}},{"@type":"Question",name:"What products do you focus on?",acceptedAnswer:{"@type":"Answer",text:"Raspberry Pi Pico/RP2040, ESP32 modules, power boards, robotics, and smart-agriculture kits."}},{"@type":"Question",name:"How can I contribute?",acceptedAnswer:{"@type":"Answer",text:"Open issues/PRs on GitHub, share feedback, or join our Discord community."}}]})})]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"what-is-mechaxil",children:"What is Mechaxil?"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Mechaxil"})," builds ",(0,s.jsx)(t.strong,{children:"open-source electronics"})," that are easy to learn and use.",(0,s.jsx)(t.br,{}),"\n","We combine affordable hardware with ",(0,s.jsx)(t.strong,{children:"bite-sized documentation"}),", so you can ship ideas faster."]}),"\n",(0,s.jsx)(t.h2,{id:"highlights",children:"Highlights"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Raspberry Pi Pico / RP2040 and ESP32 ecosystems"}),"\n",(0,s.jsx)(t.li,{children:"Robotics & smart-ag kits with real, testable examples"}),"\n",(0,s.jsx)(t.li,{children:"HU/EN documentation with concise intros, then deeper dives"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"explore",children:"Explore"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\ud83d\ude80 ",(0,s.jsx)(t.a,{href:"/docs/getting-started",children:"Getting Started"})]}),"\n",(0,s.jsxs)(t.li,{children:["\ud83d\udcac ",(0,s.jsx)(t.a,{href:"/contact",children:"Contact"})]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);